!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
AvlNode	/home/tgni/Workspace/ds_ana/solution/ch04/avltree.c	/^typedef struct AvlNode$/;"	s	file:
AvlNode::Depth	/home/tgni/Workspace/ds_ana/solution/ch04/avltree.c	/^	int		Depth;$/;"	m	struct:AvlNode	file:	access:public
AvlNode::Dist	/home/tgni/Workspace/ds_ana/solution/ch04/avltree.c	/^	int		Dist;$/;"	m	struct:AvlNode	file:	access:public
AvlNode::Element	/home/tgni/Workspace/ds_ana/solution/ch04/avltree.c	/^	ElementType	Element;$/;"	m	struct:AvlNode	file:	access:public
AvlNode::Height	/home/tgni/Workspace/ds_ana/solution/ch04/avltree.c	/^	int		Height;$/;"	m	struct:AvlNode	file:	access:public
AvlNode::Left	/home/tgni/Workspace/ds_ana/solution/ch04/avltree.c	/^	AvlTree		Left;$/;"	m	struct:AvlNode	file:	access:public
AvlNode::List	/home/tgni/Workspace/ds_ana/solution/ch04/avltree.c	/^	list_head_t	List;$/;"	m	struct:AvlNode	file:	access:public
AvlNode::Right	/home/tgni/Workspace/ds_ana/solution/ch04/avltree.c	/^	AvlTree		Right;$/;"	m	struct:AvlNode	file:	access:public
AvlNode_t	/home/tgni/Workspace/ds_ana/solution/ch04/avltree.c	/^} AvlNode_t;$/;"	t	typeref:struct:AvlNode	file:
AvlTree	/home/tgni/Workspace/ds_ana/solution/ch04/avltree.h	/^typedef struct AvlNode *AvlTree;$/;"	t	typeref:struct:AvlNode
BUF	/home/tgni/Workspace/ds_ana/solution/ch04/avltree.c	/^static char BUF[1024] = {0};$/;"	v	file:
BUF	/home/tgni/Workspace/ds_ana/solution/ch04/tree.c	/^static char BUF[1024] = {0};$/;"	v	file:
BUF_POS	/home/tgni/Workspace/ds_ana/solution/ch04/avltree.c	/^static int32_t BUF_POS = 0;$/;"	v	file:
BUF_POS	/home/tgni/Workspace/ds_ana/solution/ch04/tree.c	/^static int32_t BUF_POS = 0;$/;"	v	file:
ComputeDistAndDepth	/home/tgni/Workspace/ds_ana/solution/ch04/avltree.c	/^void ComputeDistAndDepth( AvlTree T )$/;"	f	signature:( AvlTree T )
ComputeWidth	/home/tgni/Workspace/ds_ana/solution/ch04/avltree.c	/^static inline int32_t ComputeWidth(int32_t X)$/;"	f	file:	signature:(int32_t X)
CreateNewNode	/home/tgni/Workspace/ds_ana/solution/ch04/avltree.c	/^AvlTree CreateNewNode(ElementType X)$/;"	f	signature:(ElementType X)
DEPTH	/home/tgni/Workspace/ds_ana/solution/ch04/avltree.c	/^static int32_t DEPTH = 0;$/;"	v	file:
DIST	/home/tgni/Workspace/ds_ana/solution/ch04/avltree.c	/^static int32_t DIST  = 0;$/;"	v	file:
DIST	/home/tgni/Workspace/ds_ana/solution/ch04/tree.c	/^static int32_t DIST  = 0;$/;"	v	file:
DIST_MAX	/home/tgni/Workspace/ds_ana/solution/ch04/avltree.c	9;"	d	file:
DIST_MAX	/home/tgni/Workspace/ds_ana/solution/ch04/tree.c	22;"	d	file:
Delete	/home/tgni/Workspace/ds_ana/solution/ch04/avltree.c	/^AvlTree Delete( ElementType X, AvlTree T )$/;"	f	signature:( ElementType X, AvlTree T )
Depth	/home/tgni/Workspace/ds_ana/solution/ch04/avltree.c	/^	int		Depth;$/;"	m	struct:AvlNode	file:	access:public
Dist	/home/tgni/Workspace/ds_ana/solution/ch04/avltree.c	/^	int		Dist;$/;"	m	struct:AvlNode	file:	access:public
DoubleRotateWithLeft	/home/tgni/Workspace/ds_ana/solution/ch04/avltree.c	/^static Position DoubleRotateWithLeft( Position K3 )$/;"	f	file:	signature:( Position K3 )
DoubleRotateWithRight	/home/tgni/Workspace/ds_ana/solution/ch04/avltree.c	/^static Position DoubleRotateWithRight( Position K1 )$/;"	f	file:	signature:( Position K1 )
Element	/home/tgni/Workspace/ds_ana/solution/ch04/avltree.c	/^	ElementType	Element;$/;"	m	struct:AvlNode	file:	access:public
ElementType	/home/tgni/Workspace/ds_ana/solution/ch04/avltree.h	/^typedef int ElementType;$/;"	t
Error	/home/tgni/Workspace/ds_ana/solution/ch04/fatal.h	4;"	d
FatalError	/home/tgni/Workspace/ds_ana/solution/ch04/fatal.h	5;"	d
Find	/home/tgni/Workspace/ds_ana/solution/ch04/avltree.c	/^Position Find( ElementType X, AvlTree T )$/;"	f	signature:( ElementType X, AvlTree T )
FindMax	/home/tgni/Workspace/ds_ana/solution/ch04/avltree.c	/^Position FindMax( AvlTree T )$/;"	f	signature:( AvlTree T )
FindMin	/home/tgni/Workspace/ds_ana/solution/ch04/avltree.c	/^Position FindMin( AvlTree T )$/;"	f	signature:( AvlTree T )
HPrintAvlTree	/home/tgni/Workspace/ds_ana/solution/ch04/avltree.c	/^void HPrintAvlTree(AvlTree T)$/;"	f	signature:(AvlTree T)
Height	/home/tgni/Workspace/ds_ana/solution/ch04/avltree.c	/^	int		Height;$/;"	m	struct:AvlNode	file:	access:public
Height	/home/tgni/Workspace/ds_ana/solution/ch04/avltree.c	/^static int Height( Position P )$/;"	f	file:	signature:( Position P )
Insert	/home/tgni/Workspace/ds_ana/solution/ch04/avltree.c	/^AvlTree Insert( ElementType X, AvlTree T )$/;"	f	signature:( ElementType X, AvlTree T )
LEVEL	/home/tgni/Workspace/ds_ana/solution/ch04/tree.c	/^static int32_t LEVEL = 0;$/;"	v	file:
Left	/home/tgni/Workspace/ds_ana/solution/ch04/avltree.c	/^	AvlTree		Left;$/;"	m	struct:AvlNode	file:	access:public
List	/home/tgni/Workspace/ds_ana/solution/ch04/avltree.c	/^	list_head_t	List;$/;"	m	struct:AvlNode	file:	access:public
LoopInsert	/home/tgni/Workspace/ds_ana/solution/ch04/avltree.c	/^AvlTree LoopInsert(ElementType X, AvlTree T)$/;"	f	signature:(ElementType X, AvlTree T)
MakeEmpty	/home/tgni/Workspace/ds_ana/solution/ch04/avltree.c	/^AvlTree MakeEmpty( AvlTree T )$/;"	f	signature:( AvlTree T )
Max	/home/tgni/Workspace/ds_ana/solution/ch04/avltree.c	/^static int Max( int Lhs, int Rhs )$/;"	f	file:	signature:( int Lhs, int Rhs )
NR_DEPTH_MAX	/home/tgni/Workspace/ds_ana/solution/ch04/avltree.c	392;"	d	file:
Position	/home/tgni/Workspace/ds_ana/solution/ch04/avltree.h	/^typedef struct AvlNode *Position;$/;"	t	typeref:struct:AvlNode
PrintNode	/home/tgni/Workspace/ds_ana/solution/ch04/avltree.c	/^void PrintNode(AvlTree T)$/;"	f	signature:(AvlTree T)
Retrieve	/home/tgni/Workspace/ds_ana/solution/ch04/avltree.c	/^ElementType Retrieve( Position P )$/;"	f	signature:( Position P )
Right	/home/tgni/Workspace/ds_ana/solution/ch04/avltree.c	/^	AvlTree		Right;$/;"	m	struct:AvlNode	file:	access:public
SingleRotateWithLeft	/home/tgni/Workspace/ds_ana/solution/ch04/avltree.c	/^static Position SingleRotateWithLeft( Position K2 )$/;"	f	file:	signature:( Position K2 )
SingleRotateWithRight	/home/tgni/Workspace/ds_ana/solution/ch04/avltree.c	/^static Position SingleRotateWithRight( Position K1 )$/;"	f	file:	signature:( Position K1 )
VPrintAvlTree	/home/tgni/Workspace/ds_ana/solution/ch04/avltree.c	/^void VPrintAvlTree(AvlTree T)$/;"	f	signature:(AvlTree T)
WIDTH	/home/tgni/Workspace/ds_ana/solution/ch04/avltree.c	/^static int32_t WIDTH = 0;$/;"	v	file:
_AvlTree_H	/home/tgni/Workspace/ds_ana/solution/ch04/avltree.h	4;"	d
__LAST	/home/tgni/Workspace/ds_ana/solution/ch04/avltree.c	/^static int __LAST[NR_DEPTH_MAX]; $/;"	v	file:
__QUE_H__	/home/tgni/Workspace/ds_ana/solution/ch04/que.h	9;"	d
__STACK_H__	/home/tgni/Workspace/ds_ana/solution/ch04/stack.h	8;"	d
__TREE_H__	/home/tgni/Workspace/ds_ana/solution/ch04/tree.h	2;"	d
__insert	/home/tgni/Workspace/ds_ana/solution/ch04/tree.c	/^search_tree_t * __insert(element_t e, uint32_t level, uint32_t dist, search_tree_t * t)$/;"	f	signature:(element_t e, uint32_t level, uint32_t dist, search_tree_t * t)
delete	/home/tgni/Workspace/ds_ana/solution/ch04/tree.c	/^search_tree_t * delete(element_t e, search_tree_t * t)$/;"	f	signature:(element_t e, search_tree_t * t)
dequeue	/home/tgni/Workspace/ds_ana/solution/ch04/que.c	/^void * dequeue(que_t *q)$/;"	f	signature:(que_t *q)
dist	/home/tgni/Workspace/ds_ana/solution/ch04/tree.c	/^	uint32_t dist;$/;"	m	struct:tree_node_s	file:	access:public
e	/home/tgni/Workspace/ds_ana/solution/ch04/tree.c	/^	element_t e;$/;"	m	struct:tree_node_s	file:	access:public
element_t	/home/tgni/Workspace/ds_ana/solution/ch04/tree.h	/^typedef uint32_t element_t;$/;"	t
enqueue	/home/tgni/Workspace/ds_ana/solution/ch04/que.c	/^void enqueue(que_t *q, void *obj)$/;"	f	signature:(que_t *q, void *obj)
find	/home/tgni/Workspace/ds_ana/solution/ch04/tree.c	/^position_t * find(element_t e, search_tree_t * t)$/;"	f	signature:(element_t e, search_tree_t * t)
find_max	/home/tgni/Workspace/ds_ana/solution/ch04/tree.c	/^position_t * find_max(search_tree_t * t)$/;"	f	signature:(search_tree_t * t)
find_min	/home/tgni/Workspace/ds_ana/solution/ch04/tree.c	/^position_t * find_min(search_tree_t * t)$/;"	f	signature:(search_tree_t * t)
head	/home/tgni/Workspace/ds_ana/solution/ch04/que.h	/^	struct list_head head;$/;"	m	struct:que_s	typeref:struct:que_s::list_head	access:public
head	/home/tgni/Workspace/ds_ana/solution/ch04/stack.h	/^	list_head_t head;$/;"	m	struct:stack_s	access:public
insert	/home/tgni/Workspace/ds_ana/solution/ch04/tree.c	/^search_tree_t * insert(element_t e, search_tree_t * t)$/;"	f	signature:(element_t e, search_tree_t * t)
left	/home/tgni/Workspace/ds_ana/solution/ch04/tree.c	/^	search_tree_t *left;$/;"	m	struct:tree_node_s	file:	access:public
level	/home/tgni/Workspace/ds_ana/solution/ch04/tree.c	/^	uint32_t level;$/;"	m	struct:tree_node_s	file:	access:public
list	/home/tgni/Workspace/ds_ana/solution/ch04/tree.c	/^	list_head_t  list;$/;"	m	struct:tree_node_s	file:	access:public
list_dir	/home/tgni/Workspace/ds_ana/solution/ch04/avltree.c	/^void list_dir(AvlTree T)$/;"	f	signature:(AvlTree T)
main	/home/tgni/Workspace/ds_ana/solution/ch04/main.c	/^int main(int argc, char *argv[])$/;"	f	signature:(int argc, char *argv[])
main	/home/tgni/Workspace/ds_ana/solution/ch04/testavl.c	/^main( )$/;"	f
make_empty	/home/tgni/Workspace/ds_ana/solution/ch04/tree.c	/^search_tree_t * make_empty(search_tree_t * t)$/;"	f	signature:(search_tree_t * t)
name	/home/tgni/Workspace/ds_ana/solution/ch04/stack.h	/^	char *name;$/;"	m	struct:stack_s	access:public
nr	/home/tgni/Workspace/ds_ana/solution/ch04/que.h	/^	int32_t nr;$/;"	m	struct:que_s	access:public
nr	/home/tgni/Workspace/ds_ana/solution/ch04/stack.h	/^	int32_t nr;$/;"	m	struct:stack_s	access:public
offset	/home/tgni/Workspace/ds_ana/solution/ch04/que.h	/^	int32_t offset;$/;"	m	struct:que_s	access:public
offset	/home/tgni/Workspace/ds_ana/solution/ch04/stack.h	/^	int32_t offset;$/;"	m	struct:stack_s	access:public
pop	/home/tgni/Workspace/ds_ana/solution/ch04/stack.c	/^void * pop(stack_t *s)$/;"	f	signature:(stack_t *s)
position_t	/home/tgni/Workspace/ds_ana/solution/ch04/tree.h	/^typedef struct tree_node_s position_t;$/;"	t	typeref:struct:tree_node_s
print_e	/home/tgni/Workspace/ds_ana/solution/ch04/tree.c	/^void print_e(search_tree_t *t)$/;"	f	signature:(search_tree_t *t)
print_tree	/home/tgni/Workspace/ds_ana/solution/ch04/tree.c	/^void print_tree(search_tree_t * t)$/;"	f	signature:(search_tree_t * t)
push	/home/tgni/Workspace/ds_ana/solution/ch04/stack.c	/^void push(stack_t *s, void *obj)$/;"	f	signature:(stack_t *s, void *obj)
que_init	/home/tgni/Workspace/ds_ana/solution/ch04/que.c	/^void que_init(que_t *q, char *name, int32_t offset)$/;"	f	signature:(que_t *q, char *name, int32_t offset)
que_s	/home/tgni/Workspace/ds_ana/solution/ch04/que.h	/^typedef struct que_s {$/;"	s
que_s::head	/home/tgni/Workspace/ds_ana/solution/ch04/que.h	/^	struct list_head head;$/;"	m	struct:que_s	typeref:struct:que_s::list_head	access:public
que_s::nr	/home/tgni/Workspace/ds_ana/solution/ch04/que.h	/^	int32_t nr;$/;"	m	struct:que_s	access:public
que_s::offset	/home/tgni/Workspace/ds_ana/solution/ch04/que.h	/^	int32_t offset;$/;"	m	struct:que_s	access:public
que_s::thd	/home/tgni/Workspace/ds_ana/solution/ch04/que.h	/^	int32_t thd;$/;"	m	struct:que_s	access:public
que_t	/home/tgni/Workspace/ds_ana/solution/ch04/que.h	/^} que_t;$/;"	t	typeref:struct:que_s
right	/home/tgni/Workspace/ds_ana/solution/ch04/tree.c	/^	search_tree_t *right;$/;"	m	struct:tree_node_s	file:	access:public
search_tree_t	/home/tgni/Workspace/ds_ana/solution/ch04/tree.h	/^typedef struct tree_node_s search_tree_t;$/;"	t	typeref:struct:tree_node_s
stack_init	/home/tgni/Workspace/ds_ana/solution/ch04/stack.c	/^void stack_init(stack_t *s, char *name, int32_t offset)$/;"	f	signature:(stack_t *s, char *name, int32_t offset)
stack_s	/home/tgni/Workspace/ds_ana/solution/ch04/stack.h	/^typedef struct stack_s {$/;"	s
stack_s::head	/home/tgni/Workspace/ds_ana/solution/ch04/stack.h	/^	list_head_t head;$/;"	m	struct:stack_s	access:public
stack_s::name	/home/tgni/Workspace/ds_ana/solution/ch04/stack.h	/^	char *name;$/;"	m	struct:stack_s	access:public
stack_s::nr	/home/tgni/Workspace/ds_ana/solution/ch04/stack.h	/^	int32_t nr;$/;"	m	struct:stack_s	access:public
stack_s::offset	/home/tgni/Workspace/ds_ana/solution/ch04/stack.h	/^	int32_t offset;$/;"	m	struct:stack_s	access:public
stack_s::thd	/home/tgni/Workspace/ds_ana/solution/ch04/stack.h	/^	int32_t thd;$/;"	m	struct:stack_s	access:public
stack_t	/home/tgni/Workspace/ds_ana/solution/ch04/stack.h	/^} stack_t;$/;"	t	typeref:struct:stack_s
thd	/home/tgni/Workspace/ds_ana/solution/ch04/que.h	/^	int32_t thd;$/;"	m	struct:que_s	access:public
thd	/home/tgni/Workspace/ds_ana/solution/ch04/stack.h	/^	int32_t thd;$/;"	m	struct:stack_s	access:public
tree_node_s	/home/tgni/Workspace/ds_ana/solution/ch04/tree.c	/^typedef struct tree_node_s {$/;"	s	file:
tree_node_s::dist	/home/tgni/Workspace/ds_ana/solution/ch04/tree.c	/^	uint32_t dist;$/;"	m	struct:tree_node_s	file:	access:public
tree_node_s::e	/home/tgni/Workspace/ds_ana/solution/ch04/tree.c	/^	element_t e;$/;"	m	struct:tree_node_s	file:	access:public
tree_node_s::left	/home/tgni/Workspace/ds_ana/solution/ch04/tree.c	/^	search_tree_t *left;$/;"	m	struct:tree_node_s	file:	access:public
tree_node_s::level	/home/tgni/Workspace/ds_ana/solution/ch04/tree.c	/^	uint32_t level;$/;"	m	struct:tree_node_s	file:	access:public
tree_node_s::list	/home/tgni/Workspace/ds_ana/solution/ch04/tree.c	/^	list_head_t  list;$/;"	m	struct:tree_node_s	file:	access:public
tree_node_s::right	/home/tgni/Workspace/ds_ana/solution/ch04/tree.c	/^	search_tree_t *right;$/;"	m	struct:tree_node_s	file:	access:public
tree_node_t	/home/tgni/Workspace/ds_ana/solution/ch04/tree.c	/^} tree_node_t;$/;"	t	typeref:struct:tree_node_s	file:
