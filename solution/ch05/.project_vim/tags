!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
Cell	/home/tgni/ds_ana/solution/ch05/hashquad.c	/^        typedef struct HashEntry Cell;$/;"	t	typeref:struct:HashEntry	file:
CheckPrime	/home/tgni/ds_ana/solution/ch05/next_prime.c	/^static int CheckPrime( int N )$/;"	f	file:	signature:( int N )
Deleted	/home/tgni/ds_ana/solution/ch05/hashquad.c	/^        enum KindOfEntry { Legitimate, Empty, Deleted };$/;"	e	enum:KindOfEntry	file:
DestroyTable	/home/tgni/ds_ana/solution/ch05/hashquad.c	/^        DestroyTable( HashTable H )$/;"	f	signature:( HashTable H )
DestroyTable	/home/tgni/ds_ana/solution/ch05/hashsep.c	/^        DestroyTable( HashTable H )$/;"	f	signature:( HashTable H )
EMPTY	/home/tgni/ds_ana/solution/ch05/main.c	5;"	d	file:
Element	/home/tgni/ds_ana/solution/ch05/hashquad.c	/^            ElementType      Element;$/;"	m	struct:HashEntry	file:	access:public
Element	/home/tgni/ds_ana/solution/ch05/hashsep.c	/^            ElementType Element;$/;"	m	struct:ListNode	file:	access:public
ElementType	/home/tgni/ds_ana/solution/ch05/hashquad.h	/^typedef int ElementType;$/;"	t
ElementType	/home/tgni/ds_ana/solution/ch05/hashsep.h	/^typedef int ElementType;$/;"	t
Empty	/home/tgni/ds_ana/solution/ch05/hashquad.c	/^        enum KindOfEntry { Legitimate, Empty, Deleted };$/;"	e	enum:KindOfEntry	file:
Error	/home/tgni/ds_ana/solution/ch05/fatal.h	4;"	d
FatalError	/home/tgni/ds_ana/solution/ch05/fatal.h	5;"	d
Find	/home/tgni/ds_ana/solution/ch05/hashquad.c	/^        Find( ElementType Key, HashTable H )$/;"	f	signature:( ElementType Key, HashTable H )
Find	/home/tgni/ds_ana/solution/ch05/hashsep.c	/^        Find( ElementType Key, HashTable H )$/;"	f	signature:( ElementType Key, HashTable H )
Hash	/home/tgni/ds_ana/solution/ch05/hashquad.c	/^        Hash( ElementType Key, int TableSize )$/;"	f	signature:( ElementType Key, int TableSize )
Hash	/home/tgni/ds_ana/solution/ch05/hashsep.c	/^        Hash( ElementType Key, int TableSize )$/;"	f	signature:( ElementType Key, int TableSize )
Hash	/home/tgni/ds_ana/solution/ch05/main.c	/^static Index Hash( ElementType Key, int TableSize)$/;"	f	file:	signature:( ElementType Key, int TableSize)
Hash1	/home/tgni/ds_ana/solution/ch05/hashfunc.c	/^        Hash1( const char *Key, int TableSize )$/;"	f	signature:( const char *Key, int TableSize )
Hash2	/home/tgni/ds_ana/solution/ch05/hashfunc.c	/^        Hash2( const char *Key, int TableSize )$/;"	f	signature:( const char *Key, int TableSize )
Hash3	/home/tgni/ds_ana/solution/ch05/hashfunc.c	/^        Hash3( const char *Key, int TableSize )$/;"	f	signature:( const char *Key, int TableSize )
HashEntry	/home/tgni/ds_ana/solution/ch05/hashquad.c	/^        struct HashEntry$/;"	s	file:
HashEntry::Element	/home/tgni/ds_ana/solution/ch05/hashquad.c	/^            ElementType      Element;$/;"	m	struct:HashEntry	file:	access:public
HashEntry::Info	/home/tgni/ds_ana/solution/ch05/hashquad.c	/^            enum KindOfEntry Info;$/;"	m	struct:HashEntry	typeref:enum:HashEntry::KindOfEntry	file:	access:public
HashTable	/home/tgni/ds_ana/solution/ch05/hashquad.h	/^        typedef struct HashTbl *HashTable;$/;"	t	typeref:struct:HashTbl
HashTable	/home/tgni/ds_ana/solution/ch05/hashsep.h	/^        typedef struct HashTbl *HashTable;$/;"	t	typeref:struct:HashTbl
HashTbl	/home/tgni/ds_ana/solution/ch05/hashquad.c	/^        struct HashTbl$/;"	s	file:
HashTbl	/home/tgni/ds_ana/solution/ch05/hashsep.c	/^        struct HashTbl$/;"	s	file:
HashTbl::TableSize	/home/tgni/ds_ana/solution/ch05/hashquad.c	/^            int TableSize;$/;"	m	struct:HashTbl	file:	access:public
HashTbl::TableSize	/home/tgni/ds_ana/solution/ch05/hashsep.c	/^            int TableSize;$/;"	m	struct:HashTbl	file:	access:public
HashTbl::TheCells	/home/tgni/ds_ana/solution/ch05/hashquad.c	/^            Cell *TheCells;$/;"	m	struct:HashTbl	file:	access:public
HashTbl::TheLists	/home/tgni/ds_ana/solution/ch05/hashsep.c	/^            List *TheLists;$/;"	m	struct:HashTbl	file:	access:public
Index	/home/tgni/ds_ana/solution/ch05/hashfunc.c	/^typedef unsigned int Index;$/;"	t	file:
Index	/home/tgni/ds_ana/solution/ch05/hashquad.h	/^        typedef unsigned int Index;$/;"	t
Index	/home/tgni/ds_ana/solution/ch05/hashsep.h	/^        typedef unsigned int Index;$/;"	t
Info	/home/tgni/ds_ana/solution/ch05/hashquad.c	/^            enum KindOfEntry Info;$/;"	m	struct:HashEntry	typeref:enum:HashEntry::KindOfEntry	file:	access:public
InitializeTable	/home/tgni/ds_ana/solution/ch05/hashquad.c	/^        InitializeTable( int TableSize )$/;"	f	signature:( int TableSize )
InitializeTable	/home/tgni/ds_ana/solution/ch05/hashsep.c	/^        InitializeTable( int TableSize )$/;"	f	signature:( int TableSize )
Insert	/home/tgni/ds_ana/solution/ch05/hashquad.c	/^        Insert( ElementType Key, HashTable H )$/;"	f	signature:( ElementType Key, HashTable H )
Insert	/home/tgni/ds_ana/solution/ch05/hashsep.c	/^        Insert( ElementType Key, HashTable H )$/;"	f	signature:( ElementType Key, HashTable H )
KindOfEntry	/home/tgni/ds_ana/solution/ch05/hashquad.c	/^        enum KindOfEntry { Legitimate, Empty, Deleted };$/;"	g	file:
Legitimate	/home/tgni/ds_ana/solution/ch05/hashquad.c	/^        enum KindOfEntry { Legitimate, Empty, Deleted };$/;"	e	enum:KindOfEntry	file:
LinearHash	/home/tgni/ds_ana/solution/ch05/main.c	/^static Index LinearHash(ElementType Key, int collision, int TableSize)$/;"	f	file:	signature:(ElementType Key, int collision, int TableSize)
LinearInsert	/home/tgni/ds_ana/solution/ch05/main.c	/^static Index LinearInsert(ElementType Key, int A[], int TableSize)$/;"	f	file:	signature:(ElementType Key, int A[], int TableSize)
List	/home/tgni/ds_ana/solution/ch05/hashsep.c	/^        typedef Position List;$/;"	t	file:
ListNode	/home/tgni/ds_ana/solution/ch05/hashsep.c	/^        struct ListNode$/;"	s	file:
ListNode::Element	/home/tgni/ds_ana/solution/ch05/hashsep.c	/^            ElementType Element;$/;"	m	struct:ListNode	file:	access:public
ListNode::Next	/home/tgni/ds_ana/solution/ch05/hashsep.c	/^            Position    Next;$/;"	m	struct:ListNode	file:	access:public
MinTableSize	/home/tgni/ds_ana/solution/ch05/hashquad.c	5;"	d	file:
MinTableSize	/home/tgni/ds_ana/solution/ch05/hashsep.c	5;"	d	file:
Next	/home/tgni/ds_ana/solution/ch05/hashsep.c	/^            Position    Next;$/;"	m	struct:ListNode	file:	access:public
NextPrime	/home/tgni/ds_ana/solution/ch05/hashquad.c	/^        NextPrime( int N )$/;"	f	file:	signature:( int N )
NextPrime	/home/tgni/ds_ana/solution/ch05/hashsep.c	/^        NextPrime( int N )$/;"	f	file:	signature:( int N )
NextPrime	/home/tgni/ds_ana/solution/ch05/next_prime.c	/^static int NextPrime( int N )$/;"	f	file:	signature:( int N )
Position	/home/tgni/ds_ana/solution/ch05/hashquad.h	/^        typedef Index Position;$/;"	t
Position	/home/tgni/ds_ana/solution/ch05/hashsep.h	/^        typedef struct ListNode *Position;$/;"	t	typeref:struct:ListNode
PrintPrime	/home/tgni/ds_ana/solution/ch05/next_prime.c	/^static void PrintPrime(int N)$/;"	f	file:	signature:(int N)
QuadHash	/home/tgni/ds_ana/solution/ch05/main.c	/^static Index QuadHash(ElementType Key, int collision, int TableSize)$/;"	f	file:	signature:(ElementType Key, int collision, int TableSize)
QuadInsert	/home/tgni/ds_ana/solution/ch05/main.c	/^static Index QuadInsert(ElementType Key, int A[], int TableSize)$/;"	f	file:	signature:(ElementType Key, int A[], int TableSize)
Rehash	/home/tgni/ds_ana/solution/ch05/hashquad.c	/^        Rehash( HashTable H )$/;"	f	signature:( HashTable H )
Retrieve	/home/tgni/ds_ana/solution/ch05/hashquad.c	/^        Retrieve( Position P, HashTable H )$/;"	f	signature:( Position P, HashTable H )
Retrieve	/home/tgni/ds_ana/solution/ch05/hashsep.c	/^        Retrieve( Position P )$/;"	f	signature:( Position P )
SecondHash	/home/tgni/ds_ana/solution/ch05/main.c	/^static Index SecondHash(ElementType Key, int collision, int TableSize)$/;"	f	file:	signature:(ElementType Key, int collision, int TableSize)
SecondInsert	/home/tgni/ds_ana/solution/ch05/main.c	/^static Index SecondInsert(ElementType Key, int A[], int TableSize)$/;"	f	file:	signature:(ElementType Key, int A[], int TableSize)
TableSize	/home/tgni/ds_ana/solution/ch05/hashquad.c	/^            int TableSize;$/;"	m	struct:HashTbl	file:	access:public
TableSize	/home/tgni/ds_ana/solution/ch05/hashsep.c	/^            int TableSize;$/;"	m	struct:HashTbl	file:	access:public
TheCells	/home/tgni/ds_ana/solution/ch05/hashquad.c	/^            Cell *TheCells;$/;"	m	struct:HashTbl	file:	access:public
TheLists	/home/tgni/ds_ana/solution/ch05/hashsep.c	/^            List *TheLists;$/;"	m	struct:HashTbl	file:	access:public
_HashQuad_H	/home/tgni/ds_ana/solution/ch05/hashquad.h	6;"	d
_HashSep_H	/home/tgni/ds_ana/solution/ch05/hashsep.h	10;"	d
main	/home/tgni/ds_ana/solution/ch05/main.c	/^int main(int argc, char *argv[])$/;"	f	signature:(int argc, char *argv[])
main	/home/tgni/ds_ana/solution/ch05/next_prime.c	/^int main(int argc, char *argv[])$/;"	f	signature:(int argc, char *argv[])
